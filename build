#!/usr/bin/env python3
import os, sys, warnings
from types import ModuleType
from importlib import import_module

sys.path.append(os.path.abspath("plots"))
path = os.path.abspath(os.path.dirname(__file__))
formats = ['html', 'eps', 'jpeg', 'jpg', 'pdf', 'png', 'svg', 'webp']
if len(sys.argv) > 1 and sys.argv[1] in formats:
    format = "." + sys.argv[1]
    plots = sys.argv[2:]
else:
    plots = sys.argv[1:]
    format = ".png"

if len(plots) == 0:
    plots = [f[:-3] for f in os.listdir(os.path.join(path, "plots")) if f.endswith(".py") and f != "__init__.py"]

def build():
    i = 0
    t = len(plots)
    for f in plots:
        i = i + 1
        print("Building plot {} {}/{}...".format(f, i, t))
        plot = import_module("." + f, package="plots")
        plot.__figname__ = f
        build_figure(plot)
    print("Done")

def build_figure(plotting_module):
    fig = plotting_module.plot()
    if not fig:
        warnings.warn(f"No figure returned from {plotting_module.__name__}.")
        return
    if isinstance(fig, list):
        for i, f in enumerate(fig):
            _build_figure(plotting_module, f, i)
    elif isinstance(fig, dict):
        for suffix, f in fig.items():
            _build_figure(plotting_module, f, suffix)
    else:
        _build_figure(plotting_module, fig)

def _build_figure(plotting_module, fig, suffix=None):
    fname = os.path.join(
        path, "figures", plotting_module.__figname__ + (f"_{suffix}" if suffix is not None else "") + format
    )
    if format == ".html":
        fig.write_html(fname)
    else:
        fig.write_image(fname, width=1920, height=1080)

if __name__ == "__main__":
    build()
